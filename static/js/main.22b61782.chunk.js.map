{"version":3,"sources":["components/Header.js","components/Body.js","images/icon-check.svg","images/icon-cross.svg","components/Todo/Todo.js","components/Home.js","images/bg-desktop-light.jpg","images/bg-desktop-dark.jpg","images/icon-sun.svg","images/icon-moon.svg","App.js","index.js"],"names":["Header","path","className","src","alt","Body","backgrounColorClass","Todo","text","todoContainer","onDelete","id","handleCompleted","btnClass","strike","onClick","CheckIcon","style","textDecorationLine","textDecorationStyle","CrossIcon","Home","icon","iconChange","inputContainer","input","footer","useState","todo","setTodo","task","completed","array","setArray","activeArray","setActiveArray","completedArray","setCompletedArray","inputValue","setInputValue","allBtn","setAllBtn","activeBtn","setActiveBtn","completeBtn","setCompleteBtn","remaining","length","limit","e","target","value","substr","handleDelete","prevArray","filter","index","insideReturnActive","activeTasks","insideReturnComplete","completedTasks","fullArray","map","active","complete","useEffect","tasks","trim","class","onChange","onKeyPress","keyCode","which","onKeyDown","onKeyUp","placeholder","type","App","SunIcon","setIcon","backgrounClass","setBackgroundClass","setInputContainer","setTodoContainer","setInput","DesktopLight","setPath","setFooter","MoonIcon","DesktopDark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22b61782.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nfunction Header({path}){\r\n    return (\r\n        <div className=\"header\" > \r\n            <img className=\"header-image\" src={path} alt=\"background-image\"/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Body ({backgrounColorClass}){\r\n    return (\r\n        <div className={backgrounColorClass}>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Body;","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React, { useState, useEffect } from \"react\";\r\n//icons\r\nimport CheckIcon from \"../../images/icon-check.svg\";\r\nimport CrossIcon from \"../../images/icon-cross.svg\";\r\n\r\nfunction Todo({ text, todoContainer, onDelete, id, handleCompleted, btnClass, strike  }) {\r\n\r\n    function handleClick() {\r\n       \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={todoContainer}>\r\n            <div onClick={ () => {handleClick(); handleCompleted(id);}}\r\n            className={btnClass}> \r\n            <img className=\"check\" src={CheckIcon} alt=\"icon\" />\r\n            </div>\r\n            <span className=\"todo-text\">\r\n                {strike ? <h4 style={{ textDecorationLine: 'line-through', textDecorationStyle: 'solid' }} >{text}</h4> \r\n                : \r\n                <h4> {text}</h4>}\r\n            </span>\r\n            <img onClick={() => onDelete(id)} className=\"cross-icon\" src={CrossIcon} alt=\"icon\" />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Todo;","import React, { useState, useEffect } from \"react\";\r\nimport Todo from \"./Todo/Todo\";\r\n\r\n\r\n\r\nfunction Home({ icon, iconChange, inputContainer, todoContainer, input, footer }) {\r\n\r\n    const [todo, setTodo] = useState(\"\");\r\n    const [array, setArray] = useState([\r\n        {\r\n            id: 0,\r\n            task: \"Get Your Coffee\",\r\n            completed: false\r\n        },\r\n        {\r\n            id: 1,\r\n            task: \"Check your TODO\",\r\n            completed: false\r\n        }]);\r\n\r\n    const [activeArray, setActiveArray] = useState([]);\r\n    const [completedArray, setCompletedArray] = useState([]);\r\n\r\n    const [inputValue, setInputValue] = useState();\r\n    const [allBtn, setAllBtn] = useState(false);\r\n    const [activeBtn, setActiveBtn] = useState(false);\r\n    const [completeBtn, setCompleteBtn] = useState(false);\r\n\r\n\r\n    let remaining = array.length;\r\n    let remainingActive;\r\n    let remainingCompleted;\r\n\r\n    // setting state of input value and todo item which is pushed to array\r\n    function handleChange(e) {\r\n        setTodo(e.target.value);\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n\r\n    // Limiting no. of characters inputted to prevent text overflow in todo components\r\n    function limit(e) {\r\n        var max_chars = 40;\r\n\r\n        if (e.target.value.length > max_chars) {\r\n            e.target.value = e.target.value.substr(0, max_chars);\r\n        }\r\n    }\r\n\r\n\r\n    // adding new items to the array and prevent adding a whitespace item into array\r\n    function handleClick() {\r\n\r\n        const tasks = [...array,\r\n        {\r\n            id: array.length,\r\n            task: todo,\r\n            completed: false\r\n        }]\r\n\r\n        todo.trim().length ? setArray(tasks)\r\n            : setArray([...array])\r\n        setTodo(\"\");\r\n        setInputValue(\"\");\r\n        setAllBtn(false);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        let code = e.keyCode || e.which\r\n        if (code === 13) {\r\n            const tasks = [...array,\r\n            {\r\n                id: array.length,\r\n                task: todo,\r\n                completed: false\r\n            }]\r\n\r\n            todo.trim().length ? setArray(tasks)\r\n                : setArray([...array])\r\n            setTodo(\"\");\r\n            setInputValue(\"\");\r\n            setAllBtn(false);\r\n        }\r\n    }\r\n\r\n\r\n    //Handling the delete button for each seperate todo item\r\n    function handleDelete(id) {\r\n        setArray(prevArray => {\r\n            return prevArray.filter((todo, index) => {\r\n                return todo.id !== id\r\n            })\r\n        })\r\n    }\r\n\r\n    // to render all todo items (active and complete) if the activeArray or completedArray is being rendered\r\n    function returnAll() {\r\n\r\n        if (allBtn == true) {\r\n            setAllBtn(false);\r\n            setActiveBtn(false);\r\n            setCompleteBtn(false);\r\n        }\r\n\r\n    }\r\n\r\n    // To update the activeArray if item is checked as completed -- updates on useEffect with array as dep.\r\n    function insideReturnActive() {\r\n        const activeTasks = array.filter((todo) => {\r\n            return todo.completed === false\r\n        })\r\n        setActiveArray(activeTasks)\r\n    }\r\n\r\n    function returnActive() {\r\n        setAllBtn(true);\r\n        setActiveBtn(true);\r\n        setCompleteBtn(false);\r\n        insideReturnActive()\r\n\r\n\r\n    }\r\n\r\n    // To update completedArray if item is unchecked to be active again -- updates on useEffect with array as dep.\r\n\r\n    function insideReturnComplete() {\r\n        const completedTasks = array.filter((todo) => {\r\n            return todo.completed === true\r\n        })\r\n        setCompletedArray(completedTasks)\r\n    }\r\n\r\n    function returnComplete() {\r\n        setCompleteBtn(true);\r\n        setAllBtn(true);\r\n        setActiveBtn(false);\r\n        insideReturnComplete()\r\n\r\n    }\r\n\r\n    //To update active and complete arrays without triggering parent function\r\n\r\n    useEffect(() => {\r\n        insideReturnActive()\r\n        insideReturnComplete()\r\n    }, [array])\r\n\r\n\r\n    // OnClick to toggle the completed key in the object in the array and assigning new arrays \r\n    //beside the main \"array\" to dynamically display each one without affecting the \"array\"\r\n    function handleCompleted(id) {\r\n        const fullArray = array.map((todo) => {\r\n            if (id === todo.id && todo.completed === false) {\r\n                return { ...todo, completed: true }\r\n            } else if (id === todo.id && todo.completed === true) {\r\n                return { ...todo, completed: false }\r\n            } else {\r\n                return todo\r\n            }\r\n        })\r\n        setArray(fullArray)\r\n\r\n        const active = activeArray.map((todo) => {\r\n            if (id === todo.id && todo.completed === false) {\r\n                return { ...todo, completed: true }\r\n            } else if (id === todo.id && todo.completed === true) {\r\n                return { ...todo, completed: false }\r\n            } else {\r\n                return todo\r\n            }\r\n        })\r\n        setActiveArray(active)\r\n\r\n        const complete = completedArray.map((todo) => {\r\n            if (id === todo.id && todo.completed === false) {\r\n                return { ...todo, completed: true }\r\n            } else if (id === todo.id && todo.completed === true) {\r\n                return { ...todo, completed: false }\r\n            } else {\r\n                return todo\r\n            }\r\n        })\r\n        setActiveArray(complete)\r\n    }\r\n\r\n    // Deleting the completed todo in both array and CompletedArray\r\n    function deleteComplete() {\r\n        setArray(prevArray => {\r\n            return array.filter((todo) => {\r\n                return todo.completed !== true\r\n            })\r\n        })\r\n        setCompletedArray([]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n\r\n            <div className=\"header-title\">\r\n\r\n                <h1>TODO</h1>\r\n\r\n                <img src={icon} onClick={iconChange} alt=\"icon\" />\r\n            </div>\r\n\r\n            <div className={inputContainer}>\r\n                <button onClick={handleClick} class=\"input-btn\"></button>\r\n                <input onChange={handleChange}\r\n                    onKeyPress={handleKeyPress}\r\n                    onKeyDown={limit}\r\n                    onKeyUp={limit} class={input} placeholder=\"Create a new Todo...\" type=\"text\" value={inputValue} />\r\n            </div>\r\n\r\n\r\n            {!allBtn ?\r\n                array.map((todo) => {\r\n                    return <Todo\r\n                        key={todo.id}\r\n                        id={todo.id}\r\n                        text={todo.task}\r\n                        todoContainer={todoContainer}\r\n                        onDelete={handleDelete}\r\n                        handleCompleted={handleCompleted}\r\n                        // toggling classes of check button based on the completed key value\r\n                        btnClass={todo.completed ? \"input-btn-click\" : \"input-btn\"}\r\n                        strike={todo.completed ? true : false}\r\n                    />\r\n\r\n                }) : activeBtn ?\r\n                    activeArray.map((todo) => {\r\n                        return <Todo\r\n                            key={todo.id}\r\n                            id={todo.id}\r\n                            text={todo.task}\r\n                            todoContainer={todoContainer}\r\n                            onDelete={handleDelete}\r\n                            handleCompleted={handleCompleted}\r\n                            btnClass={todo.completed ? \"input-btn-click\" : \"input-btn\"}\r\n                        />\r\n                    })\r\n                    : completeBtn ?\r\n                        completedArray.map((todo) => {\r\n                            return <Todo\r\n                                key={todo.id}\r\n                                id={todo.id}\r\n                                text={todo.task}\r\n                                todoContainer={todoContainer}\r\n                                onDelete={handleDelete}\r\n                                handleCompleted={handleCompleted}\r\n                                btnClass={todo.completed ? \"input-btn-click\" : \"input-btn\"}\r\n                            />\r\n                        }) : null}\r\n\r\n            <div className={footer}>\r\n                <span>\r\n                    <h6>\r\n                        { // to dynamically display the number of remaining items based on the selected\r\n                            // array \" array - activeArray - completedArray\"\r\n                            activeBtn ? remainingActive = activeArray.length\r\n                                : completeBtn ? remainingCompleted = completedArray.length\r\n                                    : remaining + \"\"} items left</h6>\r\n                </span>\r\n\r\n\r\n                <a onClick={returnAll} className=\"footer-btn\" >All</a>\r\n\r\n                <a onClick={returnActive} className=\"footer-btn\">Active</a>\r\n\r\n                <a onClick={returnComplete} className=\"footer-btn\">Completed</a>\r\n\r\n                <a onClick={deleteComplete} className=\"footer-btn\">Clear Completed</a>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import React, { useState } from 'react';\n//components\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Home from \"./components/Home\";\n//images\nimport MobileLight from \"./images/bg-mobile-light.jpg\";\nimport MobileDark from \"./images/bg-mobile-dark.jpg\";\nimport DesktopLight from \"./images/bg-desktop-light.jpg\";\nimport DesktopDark from \"./images/bg-desktop-dark.jpg\";\n//icons\nimport SunIcon from \"./images/icon-sun.svg\";\nimport MoonIcon from \"./images/icon-moon.svg\";\n\n\nfunction App() {\n\n  // Setting Classes to element dynamically based on if else statments\n  const [icon, setIcon] = useState(SunIcon);\n  const [backgrounClass, setBackgroundClass] = useState(\"body-light\");\n  const [inputContainer, setInputContainer] = useState(\"input-container\");\n  const [todoContainer, setTodoContainer] = useState(\"todo-container\");\n  const [input, setInput] = useState(\"input\");\n  const [path, setPath] = useState(DesktopLight);\n  const [footer, setFooter] = useState(\"footer\");\n\n  function iconChange() {\n    if (icon == MoonIcon) {\n      setIcon(SunIcon);\n      setBackgroundClass(\"body-light\");\n      setInputContainer(\"input-container\");\n      setTodoContainer(\"todo-container\");\n      setInput(\"input\");\n      setPath(DesktopLight);\n      setFooter(\"footer\");\n    }\n\n    if (icon == SunIcon) {\n      setIcon(MoonIcon);\n      setBackgroundClass(\"body-dark\");\n      setInputContainer(\"input-container-night\");\n      setTodoContainer(\"todo-container-night\");\n      setInput(\"input-night\");\n      setPath(DesktopDark);\n      setFooter(\"footer-night\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header\n        path={path} />\n\n      <Body\n        backgrounColorClass={backgrounClass} />\n\n      <Home\n        icon={icon}\n        iconChange={iconChange}\n        inputContainer={inputContainer}\n        todoContainer= {todoContainer}\n        input= {input}\n        footer={footer} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}