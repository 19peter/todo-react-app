{"version":3,"sources":["components/Header.js","Hooks/useLocalStorage.js","images/icon-check.svg","images/icon-cross.svg","components/Todo/Todo.js","components/Home.js","images/bg-desktop-light.jpg","images/bg-desktop-dark.jpg","images/icon-sun.svg","images/icon-moon.svg","App.js","index.js"],"names":["Header","path","className","src","alt","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Todo","text","todoContainer","onDelete","id","handleCompleted","btnClass","strike","onClick","CheckIcon","style","textDecorationLine","textDecorationStyle","CrossIcon","Home","icon","iconChange","inputContainer","input","footer","todo","setTodo","task","completed","array","setArray","activeArray","setActiveArray","completedArray","setCompletedArray","inputValue","setInputValue","allBtn","setAllBtn","activeBtn","setActiveBtn","completeBtn","setCompleteBtn","remaining","length","limit","e","target","substr","handleDelete","prevArray","filter","index","insideReturnActive","activeTasks","insideReturnComplete","completedTasks","fullArray","map","active","complete","useEffect","tasks","trim","class","onChange","onKeyPress","keyCode","which","onKeyDown","onKeyUp","placeholder","type","App","SunIcon","setIcon","backgrounClass","setBackgroundClass","setInputContainer","setTodoContainer","setInput","DesktopLight","setPath","setFooter","MoonIcon","document","body","backgroundColor","DesktopDark","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2fcb487b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nfunction Header({path}){\r\n    return (\r\n        <div className=\"header\" > \r\n            <img className=\"header-image\" src={path} alt=\"background\"/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import { useState } from \"react\";\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n  \r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n  \r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useLocalStorage;","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from \"react\";\r\n//icons\r\nimport CheckIcon from \"../../images/icon-check.svg\";\r\nimport CrossIcon from \"../../images/icon-cross.svg\";\r\n\r\nfunction Todo({ text, todoContainer, onDelete, id, handleCompleted, btnClass, strike  }) {\r\n\r\n\r\n    return (\r\n        <div className={todoContainer}>\r\n            <div onClick={ () =>  handleCompleted(id)}\r\n            className={btnClass}> \r\n            <img className=\"check\" src={CheckIcon} alt=\"icon\" />\r\n            </div>\r\n            <span className=\"todo-text\">\r\n                {strike ? <h4 style={{ textDecorationLine: 'line-through', textDecorationStyle: 'solid' }} >{text}</h4> \r\n                : \r\n                <h4> {text}</h4>}\r\n            </span>\r\n            <img onClick={() => onDelete(id)} className=\"cross-icon\" src={CrossIcon} alt=\"icon\" />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Todo;","import React, { useState, useEffect } from \"react\";\r\nimport useLocalStorage from \"../Hooks/useLocalStorage\";\r\nimport Todo from \"./Todo/Todo\";\r\n\r\n\r\n\r\nfunction Home({ icon, iconChange, inputContainer, todoContainer, input, footer }) {\r\n\r\n    const [todo, setTodo] = useState(\"\");\r\n\r\n    // There was an attempt to use \"useLocalStorage \" hook instead of useState \r\n    //to save data to browser to make the app minimally usable but was to buggy \r\n    const [array, setArray] = useLocalStorage(\"array\",[\r\n        {\r\n            id: 0,\r\n            task: \"Get Your Coffee\",\r\n            completed: false\r\n        },\r\n        {\r\n            id: 1,\r\n            task: \"Check your TODO\",\r\n            completed: false\r\n        }]);\r\n\r\n    const [activeArray, setActiveArray] = useState([]);\r\n    const [completedArray, setCompletedArray] = useState([]);\r\n\r\n    const [inputValue, setInputValue] = useState();\r\n    const [allBtn, setAllBtn] = useState(false);\r\n    const [activeBtn, setActiveBtn] = useState(false);\r\n    const [completeBtn, setCompleteBtn] = useState(false);\r\n\r\n\r\n    let remaining = array.length;\r\n    let remainingActive;\r\n    let remainingCompleted;\r\n\r\n    // setting state of input value and todo item which is pushed to array\r\n    function handleChange(e) {\r\n        setTodo(e.target.value);\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n\r\n    // Limiting no. of characters inputted to prevent text overflow in todo components\r\n    function limit(e) {\r\n        var max_chars = 40;\r\n\r\n        if (e.target.value.length > max_chars) {\r\n            e.target.value = e.target.value.substr(0, max_chars);\r\n        }\r\n    }\r\n\r\n\r\n    // adding new items to the array and prevent adding a whitespace item into array\r\n    function handleClick() {\r\n\r\n        const tasks = [...array,\r\n        {\r\n            id: array.length,\r\n            task: todo,\r\n            completed: false\r\n        }]\r\n\r\n        todo.trim().length ? setArray(tasks)\r\n            : setArray([...array])\r\n        setTodo(\"\");\r\n        setInputValue(\"\");\r\n        setAllBtn(false);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        let code = e.keyCode || e.which\r\n        if (code === 13) {\r\n            const tasks = [...array,\r\n            {\r\n                id: array.length,\r\n                task: todo,\r\n                completed: false\r\n            }]\r\n\r\n            todo.trim().length ? setArray(tasks)\r\n                : setArray([...array])\r\n            setTodo(\"\");\r\n            setInputValue(\"\");\r\n            setAllBtn(false);\r\n        }\r\n    }\r\n\r\n\r\n    //Handling the delete button for each seperate todo item\r\n    function handleDelete(id) {\r\n        setArray(prevArray => {\r\n            return prevArray.filter((todo, index) => {\r\n                return index !== id\r\n            })\r\n        })\r\n    }\r\n\r\n    // to render all todo items (active and complete) if the activeArray or completedArray is being rendered\r\n    function returnAll() {\r\n\r\n        if (allBtn === true) {\r\n            setAllBtn(false);\r\n            setActiveBtn(false);\r\n            setCompleteBtn(false);\r\n        }\r\n\r\n    }\r\n\r\n    // To update the activeArray if item is checked as completed -- updates on useEffect with array as dep.\r\n    function insideReturnActive() {\r\n        const activeTasks = array.filter((todo) => {\r\n            return todo.completed === false\r\n        })\r\n        setActiveArray(activeTasks)\r\n    }\r\n\r\n    function returnActive() {\r\n        setAllBtn(true);\r\n        setActiveBtn(true);\r\n        setCompleteBtn(false);\r\n        insideReturnActive()\r\n\r\n\r\n    }\r\n\r\n    // To update completedArray if item is unchecked to be active again -- updates on useEffect with array as dep.\r\n\r\n    function insideReturnComplete() {\r\n        const completedTasks = array.filter((todo) => {\r\n            return todo.completed === true\r\n        })\r\n        setCompletedArray(completedTasks)\r\n    }\r\n\r\n    function returnComplete() {\r\n        setCompleteBtn(true);\r\n        setAllBtn(true);\r\n        setActiveBtn(false);\r\n        insideReturnComplete()\r\n\r\n    }\r\n\r\n    //To update active and complete arrays without triggering parent function\r\n\r\n    useEffect(() => {\r\n        insideReturnActive()\r\n        insideReturnComplete()\r\n    }, [array])\r\n\r\n\r\n    // OnClick to toggle the \"completed\" key in the array object and assigning new arrays \r\n    //beside the main \"array\" to dynamically display each one without affecting the main \"array\"\r\n    function handleCompleted(id) {\r\n        const fullArray = array.map((todo, index) => {\r\n            if (id === index && todo.completed === false) {\r\n                return { ...todo, completed: true }\r\n            } else if (id === index && todo.completed === true) {\r\n                return { ...todo, completed: false }\r\n            } else {\r\n                return todo\r\n            }\r\n        })\r\n        setArray(fullArray)\r\n\r\n        const active = activeArray.map((todo, index) => {\r\n            if (id === index && todo.completed === false) {\r\n                return { ...todo, completed: true }\r\n            } else if (id === index && todo.completed === true) {\r\n                return { ...todo, completed: false }\r\n            } else {\r\n                return todo\r\n            }\r\n        })\r\n        setActiveArray(active)\r\n\r\n        const complete = completedArray.map((todo, index) => {\r\n            if (id === index && todo.completed === false) {\r\n                return { ...todo, completed: true }\r\n            } else if (id === index && todo.completed === true) {\r\n                return { ...todo, completed: false }\r\n            } else {\r\n                return todo\r\n            }\r\n        })\r\n        setActiveArray(complete)\r\n    }\r\n\r\n    // Deleting the completed todo in both array and CompletedArray\r\n    function deleteComplete() {\r\n        setArray(prevArray => {\r\n            return array.filter((todo) => {\r\n                return todo.completed !== true\r\n            })\r\n        })\r\n        setCompletedArray([]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n\r\n            <div className=\"header-title\">\r\n\r\n                <h1>TODO</h1>\r\n\r\n                <img src={icon} onClick={iconChange} alt=\"icon\" />\r\n            </div>\r\n\r\n            <div className={inputContainer}>\r\n                <button onClick={handleClick} class=\"input-btn\"></button>\r\n                <input onChange={handleChange}\r\n                    onKeyPress={handleKeyPress}\r\n                    onKeyDown={limit}\r\n                    onKeyUp={limit} class={input} placeholder=\"Create a new Todo...\" type=\"text\" value={inputValue} />\r\n            </div>\r\n\r\n\r\n            {!allBtn ?\r\n                array.map((todo, index) => {\r\n                    return <Todo\r\n                        key={index}\r\n                        id={index}\r\n                        text={todo.task}\r\n                        todoContainer={todoContainer}\r\n                        onDelete={handleDelete}\r\n                        handleCompleted={handleCompleted}\r\n                        // toggling classes of check button based on the completed key value\r\n                        btnClass={todo.completed ? \"input-btn-click\" : \"input-btn\"}\r\n                        strike={todo.completed ? true : false}\r\n                    />\r\n                }) : activeBtn ?\r\n                    activeArray.map((todo) => {\r\n                        return <Todo\r\n                            key={todo.id}\r\n                            id={todo.id}\r\n                            text={todo.task}\r\n                            todoContainer={todoContainer}\r\n                            onDelete={handleDelete}\r\n                            handleCompleted={handleCompleted}\r\n                            btnClass={todo.completed ? \"input-btn-click\" : \"input-btn\"}\r\n                        />\r\n                    })\r\n                    : completeBtn ?\r\n                        completedArray.map((todo) => {\r\n                            return <Todo\r\n                                key={todo.id}\r\n                                id={todo.id}\r\n                                text={todo.task}\r\n                                todoContainer={todoContainer}\r\n                                onDelete={handleDelete}\r\n                                handleCompleted={handleCompleted}\r\n                                btnClass={todo.completed ? \"input-btn-click\" : \"input-btn\"}\r\n                            />\r\n                        }) : null}\r\n\r\n            <div className={footer}>\r\n                <span>\r\n                    <h6>\r\n                        { // to dynamically display the number of remaining items based on the selected\r\n                            // array \" array - activeArray - completedArray\"\r\n                            activeBtn ? remainingActive = activeArray.length\r\n                                : completeBtn ? remainingCompleted = completedArray.length\r\n                                    : remaining + \"\"} items left</h6>\r\n                </span>\r\n\r\n\r\n                <a onClick={returnAll} className=\"footer-btn\" >All</a>\r\n\r\n                <a onClick={returnActive} className=\"footer-btn\">Active</a>\r\n\r\n                <a onClick={returnComplete} className=\"footer-btn\">Completed</a>\r\n\r\n                <a onClick={deleteComplete} className=\"footer-btn\">Clear Completed</a>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n//components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\n//images\nimport DesktopLight from \"./images/bg-desktop-light.jpg\";\nimport DesktopDark from \"./images/bg-desktop-dark.jpg\";\n//icons\nimport SunIcon from \"./images/icon-sun.svg\";\nimport MoonIcon from \"./images/icon-moon.svg\";\n\n\nfunction App() {\n\n  // Setting Classes to element dynamically based on if else statments\n  const [icon, setIcon] = useState(SunIcon);\n  const [backgrounClass, setBackgroundClass] = useState(\"body-light\");\n  const [inputContainer, setInputContainer] = useState(\"input-container\");\n  const [todoContainer, setTodoContainer] = useState(\"todo-container\");\n  const [input, setInput] = useState(\"input\");\n  const [path, setPath] = useState(DesktopLight);\n  const [footer, setFooter] = useState(\"footer\");\n\n  function iconChange() {\n    if (icon === MoonIcon) {\n      setIcon(SunIcon);\n      setBackgroundClass(\"body-light\");\n      setInputContainer(\"input-container\");\n      setTodoContainer(\"todo-container\");\n      setInput(\"input\");\n      setPath(DesktopLight);\n      setFooter(\"footer\");\n      document.body.style.backgroundColor = \"white\";    \n    }\n\n    if (icon === SunIcon) {\n      setIcon(MoonIcon);\n      setBackgroundClass(\"body-dark\");\n      setInputContainer(\"input-container-night\");\n      setTodoContainer(\"todo-container-night\");\n      setInput(\"input-night\");\n      setPath(DesktopDark);\n      setFooter(\"footer-night\");\n      document.body.style.backgroundColor = \"var(--bodyDarkMode)\"; \n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header\n        path={path} />\n\n      <div className={backgrounClass} >    \n      \n      <Home\n        icon={icon}\n        iconChange={iconChange}\n        inputContainer={inputContainer}\n        todoContainer={todoContainer}\n        input={input}\n        footer={footer} />\n        </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}